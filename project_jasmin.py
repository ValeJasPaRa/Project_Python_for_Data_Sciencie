# -*- coding: utf-8 -*-
"""Project_Jasmin.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XgkR7xK5Q9ZbSKhOjCwUGuJtLn3cyWKi
"""

tesla = yf.Ticker("TSLA")
tesla_data = tesla.history(period="max")
tesla_data.reset_index(inplace=True)
tesla_data.head()

url = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0220EN-SkillsNetwork/labs/project/revenue.htm"
html_data = requests.get(url).content
soup = BeautifulSoup(html_data, 'html.parser')
tables = soup.find_all('table')
tesla_table = None
for table in tables:
    if "Tesla Quarterly Revenue" in table.text:
        tesla_table = table
        break
tesla_revenue = pd.DataFrame(columns=["Date", "Revenue"])
for row in tesla_table.find_all('tr')[1:]:
    cols = row.find_all('td')
    if len(cols) < 2:
        continue
    date = cols[0].text.strip()
    revenue = cols[1].text.strip()
    tesla_revenue = pd.concat([tesla_revenue, pd.DataFrame([[date, revenue]], columns=["Date", "Revenue"])], ignore_index=True)
    tesla_revenue["Revenue"] = tesla_revenue['Revenue'].str.replace(',|\$',"", regex=True)
    tesla_revenue.dropna(inplace=True)

tesla_revenue = tesla_revenue[tesla_revenue['Revenue'] != ""]
tesla_revenue.tail()

gme = yf.Ticker("GME")
gme_data = tesla.history(period="max")
gme_data.reset_index(inplace=True)
gme_data.head()

url = " https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0220EN-SkillsNetwork/labs/project/stock.html"
html_data_2 = requests.get(url).content
soup_2 = BeautifulSoup(html_data_2, 'html.parser')
tables_2 = soup_2.find_all('table')
gme_table = None
for table in tables_2:
    if "GameStop Quarterly Revenue" in table.text:
        gme_table = table
        break
gme_revenue = pd.DataFrame(columns=["Date", "Revenue"])
for row in gme_table.find_all('tr')[1:]:
    cols = row.find_all('td')
    if len(cols) < 2:
        continue
    date = cols[0].text.strip()
    revenue = cols[1].text.strip()
    gme_revenue = pd.concat([gme_revenue, pd.DataFrame([[date, revenue]], columns=["Date", "Revenue"])], ignore_index=True)
    gme_revenue["Revenue"] = gme_revenue['Revenue'].str.replace(',|\$',"", regex=True)
    gme_revenue.dropna(inplace=True)

gme_revenue = gme_revenue[gme_revenue['Revenue'] != ""]
gme_revenue.tail()

import yfinance as yf
import pandas as pd
import requests
from bs4 import BeautifulSoup
import matplotlib.pyplot as plt

# Fetch Tesla stock data
tesla = yf.Ticker("TSLA")
tesla_data = tesla.history(period="max")
tesla_data.reset_index(inplace=True)

# Fetch Tesla quarterly revenue data
url = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0220EN-SkillsNetwork/labs/project/revenue.htm"
html_data = requests.get(url).content
soup = BeautifulSoup(html_data, 'html.parser')
tables = soup.find_all('table')
tesla_table = None
for table in tables:
    if "Tesla Quarterly Revenue" in table.text:
        tesla_table = table
        break

# Process the revenue data
tesla_revenue = pd.DataFrame(columns=["Date", "Revenue"])
for row in tesla_table.find_all('tr')[1:]:
    cols = row.find_all('td')
    if len(cols) < 2:
        continue
    date = cols[0].text.strip()
    revenue = cols[1].text.strip()
    tesla_revenue = pd.concat([tesla_revenue, pd.DataFrame([[date, revenue]], columns=["Date", "Revenue"])], ignore_index=True)

# Clean the revenue data
tesla_revenue["Revenue"] = tesla_revenue['Revenue'].str.replace(',|\$', "", regex=True)
tesla_revenue.dropna(inplace=True)
tesla_revenue = tesla_revenue[tesla_revenue['Revenue'] != ""]
tesla_revenue["Revenue"] = tesla_revenue["Revenue"].astype(float)

# Convert date to datetime
tesla_revenue["Date"] = pd.to_datetime(tesla_revenue["Date"])

# Define the modified make_graph function
def make_graph(tesla_data, tesla_revenue, title):
    plt.figure(figsize=(14, 7))

    # Plot stock prices
    plt.subplot(2, 1, 1)
    plt.plot(tesla_data['Date'], tesla_data['Close'], color='blue', linewidth=2)
    plt.title(f"{title} Historical Share Price", fontsize=16)
    plt.xlabel("Date", fontsize=12)
    plt.ylabel("Price ($US)", fontsize=12)
    plt.grid(visible=True)
    plt.xticks(rotation=45)

    # Customize y-axis limits and ticks
    plt.ylim(bottom=0)  # Start y-axis at 0
    plt.yticks(fontsize=10)

    # Plot revenue
    plt.subplot(2, 1, 2)
    plt.plot(tesla_revenue['Date'], tesla_revenue['Revenue'], color='red', linewidth=2)
    plt.title(f"{title} Historical Revenue", fontsize=16)
    plt.xlabel("Date", fontsize=12)
    plt.ylabel("Revenue ($US Millions)", fontsize=12)
    plt.grid(visible=True)
    plt.xticks(rotation=45)

    # Customize y-axis limits and ticks
    plt.ylim(bottom=0)  # Start y-axis at 0
    plt.yticks(fontsize=10)

    plt.tight_layout()
    plt.show()

# Call the make_graph function to display the graphs
make_graph(tesla_data, tesla_revenue, 'Tesla')

make_graph(gme_data, gme_revenue, 'GameStop')